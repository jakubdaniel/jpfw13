\documentclass{beamer}

%\usetheme[footlineauthor]{D3S}
\usetheme[event={JPF Workshop}]{D3S}
%\usetheme{D3S}

\usepackage{multirow}

\title{Predicate Abstraction in Java Pathfinder}
\author{Jakub Daniel, Pavel Parízek, Corina Păsăreanu}

\begin{document}
  \titleframe

  \begin{frame}{State Space Traversal}
  \end{frame}

  \begin{frame}{Predicate Abstraction}
    \begin{itemize}
      \item Finite set of predicates over program variables \(\rightarrow\) finite state space
      \item State space reduction
    \end{itemize}
    \begin{center}
      \includegraphics{slides1}
    \end{center}
  \end{frame}

%  \begin{frame}{Predicate Abstraction}
%    \begin{columns}[c]
%      \begin{column}{0.3\textwidth}
%        \includegraphics[width=\textwidth,keepaspectratio]{slides3}
%      \end{column}
%      \begin{column}{0.7\textwidth}
%         \begin{itemize}
%           \item Dynamic state space exploration
%             \begin{itemize}
%               \item Modeling effects of instructions on a program state
%             \end{itemize}
%           \item Counterexample
%             \begin{itemize}
%               \item Feasible witness
%               \item Infeasible spurious error
%             \end{itemize}
%           \item Refinement
%             \begin{itemize}
%               \item Lazy abstraction
%             \end{itemize}
%         \end{itemize}
%      \end{column}
%    \end{columns}
%  \end{frame}

  \begin{frame}{Project Goals}
    \begin{itemize}
      \item Predicate abstraction for Java Pathfinder
      \item Java Pathfinder
        \begin{itemize}
          \item Custom Java Virtual Machine
          \item Model checking tool for Java
          \item Interprets concrete bytecode instructions
          \item Dynamically explores program state space
            \begin{itemize}
              \item Modeling effects of instructions on a program state
            \end{itemize}
        \end{itemize}
    \end{itemize}
  \end{frame}

  \begin{frame}{Challenges}
    \begin{itemize}
      \item Predicate language
      \item Symbolic bytecode interpretation
      \item Predicate value inference
        \begin{itemize}
          \item Assignments
          \item Method call boundaries
        \end{itemize}
    \end{itemize}
  \end{frame}

  \begin{frame}
    \begin{center}
      \Huge Predicate Language
    \end{center}
  \end{frame}

  \begin{frame}{Predicate Language}
    \begin{columns}[c]
      \begin{column}{0.5\textwidth}
        \begin{itemize}
          \item {\tt fread(f, o)}
          \item {\tt sfread(f, c)}
          \item {\tt aread(arr, a, expr)}
          \item {\tt alength(arrlen, a)}
          \item {\tt +, -, *, /}
          \item {\tt =, <, >, <=, >=}
          \item {\tt return}
        \end{itemize}
      \end{column}
      \begin{column}{0.5\textwidth}
        \scalebox{0.6}{
          \lstinputlisting[morekeywords={fread,sfread,aread,arr,alength,arrlen},linewidth=8.5cm,escapechar=`]{language.pred}
        }
      \end{column}
    \end{columns}
    %\begin{center}
    %  {\small\color{gray} There is a Java-like alternative notation}
    %\end{center}
  \end{frame}

  \begin{frame}
    \begin{center}
      \Huge Symbolic Execution
    \end{center}
  \end{frame}

  \begin{frame}{Symbolic Execution}
    Suppose a predicate {\tt c = 3}\\
    \begin{center}
      \vbox to 1.5cm{
        \vfill
        \uncover<6>{
          \Large\tt c = 3 \(\Leftrightarrow\) a + b = 3
        }
        \vfill
      }
    \end{center}
    \begin{columns}[c]
      \begin{column}{\dimexpr 0.5\textwidth - 0.5cm\relax}
        \vbox{
          \small\tt
          {\color<1>{gray}   load b } \\
          {\color<1-2>{gray} load a } \\
          {\color<1-3>{gray} add    } \\
          {\color<1-4>{gray} store c}
        }
      \end{column}
      \begin{column}{\dimexpr 0.5\textwidth - 0.5cm\relax}
        \begin{center}
          \includegraphics<1,5-6>{slides5}
          \includegraphics<2>{slides6}
          \includegraphics<3>{slides7}
          \includegraphics<4>{slides8}
        \end{center}
      \end{column}
    \end{columns}
  \end{frame}

  \begin{frame}
    \begin{center}
      \Huge Predicate Value Inference
    \end{center}
  \end{frame}

  \begin{frame}{Affected Predicates -- Symbol Aliasing}
    \begin{itemize}
      \item Detecting impact of bytecode instructions
        \vbox{
          \uncover<2>{
            \vspace{0.25cm}
            \begin{columns}[T]
              \begin{column}{0.5\textwidth}
                \includegraphics[width=\textwidth,keepaspectratio]{slides2}
              \end{column}
              \begin{column}{0.5\textwidth}
                \lstinputlisting[language=Java]{alias2.java}
              \end{column}
            \end{columns}
          }
          \begin{columns}[T]
            \begin{column}{0.5\linewidth}
              \begin{block}{Predicates}
                \lstinputlisting{alias.pred}
              \end{block}
            \end{column}
            \begin{column}{0.5\linewidth}
              \begin{block}{Statement}
                \lstinputlisting[language=Java]{alias1.java}
              \end{block}
            \end{column}
          \end{columns}
        }
    \end{itemize}
  \end{frame}

  \begin{frame}{Affected Predicates -- Symbol Aliasing -- Arrays}
    \begin{columns}[c]
      \begin{column}{\dimexpr 0.3\textwidth - 0.3em\relax}
        \begin{block}{Statement}
          \lstinputlisting[language=Java]{alias3.java}
        \end{block}
      \end{column}
      \begin{column}{\dimexpr 0.7\textwidth - 0.7em\relax}
        \begin{itemize}
          \item What array element is selected?
            \begin{itemize}
              \item {\tt i} is a symbolic variable
            \end{itemize}
        \end{itemize}
      \end{column}
    \end{columns}
    \begin{center}
      \includegraphics<1>{slides9}
      \includegraphics<2>{slides10}
    \end{center}
  \end{frame}
 
  \begin{frame}{Affected Predicates}
    \begin{itemize}
      \item Predicates referring to old concrete values
        \begin{itemize}
          \item Potentially
        \end{itemize}
      \item Occurrence of overwritten variables
        \begin{itemize}
          \item Aliasing
        \end{itemize}
      \item Other predicates keep their value
        %\begin{itemize}
        %  \item
        %\end{itemize}
    \end{itemize}
  \end{frame}

  \begin{frame}{Predicate Value Inference}
    \begin{itemize}
      \item Using {\bf S}atisfiability {\bf M}odulo {\bf T}heory solver (SMT)
        \begin{center}
          {\tt
            \begin{tabular}{p{1cm}cp{0.5cm}lcp{0.5cm}l}
              $\text{a = b}$ & $\wedge$ & $\underbrace{\text{a.x}}$ & $\text{ = 1}$ & $\wedge$ & $\underbrace{\text{b.x}}$ & $\text{ = 2}$ \\
                             &          & \multicolumn{4}{c}{\tiny\sf Expressions in theory of arrays}                                     \\
            \end{tabular}
          }
        \end{center}
      \item Distinguished predicate values:
        \begin{itemize}
          \item {\tt true}
          \item {\tt false}
          \item {\tt unknown}
        \end{itemize}
      \item Predicate values determined using \emph{weakest preconditions}
    \end{itemize}
  \end{frame}

  \begin{frame}{Weakest Preconditions}
    \begin{itemize}
      \item Applied to cope with statements modifying data
      \item Recursive construction
        \begin{columns}[T]
          \begin{column}{\dimexpr 0.5\textwidth - 1cm\relax}
            \begin{block}{Predicate}
              {\tt \only<1>{\color{gray}}x{\only<2>{\color{gray}}.f{\only<3>{\color{gray}}[0]{\only<4>{\color{gray}}.num{\only<5>{\color{gray}}{\only<6-7>{\color{gray}}\;=\;}y{\only<6>{\color{gray}}.num}}}}}}
            \end{block}
          \end{column}
          \begin{column}{\dimexpr 0.5\textwidth - 1cm\relax}
            \begin{block}{Statement}
              {\only<1-8>{\color{gray}} \lstinline|x.f[i] = y;|}
            \end{block}
          \end{column}
        \end{columns}
    \end{itemize}
    \begin{center}
      \vbox{
        \invisible{\includegraphics<1>[height=4cm,keepaspectratio]{slides11}} % Reserve space
        \includegraphics<2>  [height=4cm,keepaspectratio]{slides11}
        \includegraphics<3>  [height=4cm,keepaspectratio]{slides12}
        \includegraphics<4>  [height=4cm,keepaspectratio]{slides13}
        \includegraphics<5>  [height=4cm,keepaspectratio]{slides14}
        \includegraphics<6>  [height=4cm,keepaspectratio]{slides15}
        \includegraphics<7>  [height=4cm,keepaspectratio]{slides16}
        \includegraphics<8-9>[height=4cm,keepaspectratio]{slides17}
        \includegraphics<10->[height=4cm,keepaspectratio]{slides18}
      }
      %\visible<11->{\tt \(\text{i = 0} \Rightarrow \text{x.f[0].num = y.num}\)}
    \end{center}
  \end{frame}

  \begin{frame}{Determining Predicates}
    \vspace{1em}
    \begin{itemize}
      \item Set of predicates affecting valuation of a given predicate
        \begin{itemize}
          %\item Restrict models of given predicate
          \item Overapproximated by shared symbols (e.g. {\tt x.f[0]})
        \end{itemize}
        \vspace{1em}
        \begin{enumerate}
          \item Transitive closure construction
            \begin{itemize}
              \item e.g. {\tt \begin{tabular}{ccccc}a \(\overset{\text{?}}{\text{=}}\) 3 & \(\rightarrow\) & a = b & \(\rightarrow\) & b = 3 \end{tabular}}
            \end{itemize}
          \item Consider predicate or negation depending on current valuation
            \begin{itemize}
              \item e.g. {\tt (a = b) \(\wedge\) \(\neg\)(b = 3)\only<2>{ \(\Rightarrow\) \(\neg\)(a = 3)}}
            \end{itemize}
        \end{enumerate}
    \end{itemize}
  \end{frame}

  \begin{frame}{Method Call Boundaries}
    \begin{columns}[T]
      \begin{column}{\dimexpr 0.5\textwidth - 0.5cm\relax}
        \lstinputlisting[language=Java]{method1.java}
      \end{column}
      \begin{column}{\dimexpr 0.5\textwidth - 0.5cm\relax}
        \lstinputlisting[language=Java]{method2.java}
      \end{column}
    \end{columns}
    \begin{itemize}
      \item Arguments of reference type
      \item Static fields
      \item Different sets of local variables
      \item Return values
    \end{itemize}
  \end{frame}

  \begin{frame}
    \begin{center}
      \Huge Implementation
    \end{center}
  \end{frame}

  \begin{frame}{Implementation}
    \begin{itemize}
      \item Bytecode factory
        \begin{itemize}
          \item ...
        \end{itemize}
      \item Attributes
      \item \url{https://bitbucket.org/jd823592/jpf-abstraction}
    \end{itemize}
  \end{frame}

  \begin{frame}{Branching -- Non-determinism}
    \begin{itemize}
      \item Control-flow determined by SMT based on known truth values
        \begin{center}
          \begin{minipage}{6.5cm}
            \lstinputlisting[language=Java]{branching.java}
          \end{minipage}
          \includegraphics{slides4}
        \end{center}
      \item Learning branching condition predicate
        \begin{itemize}
          \item Improves precision
        \end{itemize}
    \end{itemize}
  \end{frame}

  \begin{frame}{Future Work}
    \begin{itemize}
      \item State matching
        \begin{itemize}
          \item Equal program counters
          \item Abstract subsumption
            %\begin{itemize}
            %  \item \(\text{s}_\text{j} \le \text{s}_\text{i} \Leftrightarrow \text{"}\text{s}_\text{j} \rightarrow \text{s}_\text{i}\text{"}\) \\
            %  \item e.g.
            %    \begin{itemize}
            %      \item ({\tt a = 1}) \(\le\) ({\tt a > 0})
            %      \item ({\tt a = 1}) \(\le\) ({\tt a \(\text{=}^\text{\tiny unknown}\) 1}) 
            %    \end{itemize}
            %\end{itemize}
        \end{itemize}
      \item Predicate learning
        \begin{itemize}
          \item Current state
            \begin{itemize}
              \item User-defined predicates
              \item Branching conditions
            \end{itemize}
          \item {\bf C}ounter{\bf e}xample-{\bf G}uided {\bf A}bstraction {\bf R}efinement (CEGAR)
            \begin{itemize}
              \item Error trace analysis
              \item Heuristics backed by experiments
            \end{itemize}
          \item Static analysis
        \end{itemize}
    \end{itemize}
    %\invisible{\includegraphics<1>[height=6cm,keepaspectratio]{slides19}} % reserve space
    %\includegraphics<2>[height=6cm,keepaspectratio]{slides19}
    %\includegraphics<3>[height=6cm,keepaspectratio]{slides20}
    %\includegraphics<4>[height=6cm,keepaspectratio]{slides21}
    %\includegraphics<5>[height=6cm,keepaspectratio]{slides22}
    %\includegraphics<6>[height=6cm,keepaspectratio]{slides23}
  \end{frame}
\end{document}
