\documentclass{beamer}

%\usetheme[footlineauthor]{D3S}
%\usetheme[event={JPF Workshop}]{D3S}
\usetheme{D3S}

\title{Predicate Abstraction in Java Pathfinder}
\author{Jakub Daniel, Pavel Parízek, Corina Păsăreanu}

\begin{document}
  \titleframe

  \begin{frame}[allowframebreaks]{Predicate Abstraction}

    \begin{itemize}
      \item Abstraction \(\rightarrow\) State Space Reduction
      \item Predicate Abstraction
        \begin{itemize}
          \item Draws a lot of interest
          \item Finite set of predicates over program variables \(\rightarrow\) finite state space
            \begin{itemize}
              \item Test
            \end{itemize}
        \end{itemize}
    \end{itemize}

    \begin{center}
      \includegraphics{slides1}
    \end{center}

    \framebreak

    \begin{columns}[c]
      \begin{column}{0.3\textwidth}
        \includegraphics[width=\textwidth,keepaspectratio]{slides3}
      \end{column}
      \begin{column}{0.7\textwidth}
         \begin{itemize}
           \item Dynamic state space exploration
             \begin{itemize}
               \item Modelling effects of instructions
             \end{itemize}
         \end{itemize}
      \end{column}
    \end{columns}
  \end{frame}

  \begin{frame}{The Project Goal}
    \begin{itemize}
      \item Predicate abstraction model checker based on Java Pathfinder
        \begin{itemize}
          \item Design
            \begin{itemize}
              \item Predicate language
              \item State representation
              \item Bytecode interpretation
              \item Predicate truth value inference
            \end{itemize}
          \item Implementation
        \end{itemize}
    \end{itemize}
  \end{frame}

  \begin{frame}{Predicate Language}
    \begin{columns}[c]
      \begin{column}{0.45\textwidth}
        \begin{itemize}
          \item {\tt fread(f, o)}
          \item {\tt sfread(f, c)}
          \item {\tt aread(arr, a, expr)}
          \item {\tt alength(arrlen, a)}
          \item {\tt =, <, >, <=, >=}
          \item {\tt return}
        \end{itemize}
      \end{column}
      \begin{column}{0.55\textwidth}
        \scalebox{0.7}{
          \lstinputlisting[morekeywords={static,object,method},linewidth=8cm,escapechar=`]{language.pred}
        }
      \end{column}
    \end{columns}
  \end{frame}

  \begin{frame}{Affected Predicates - Symbol Aliasing}
    \begin{itemize}
      \item Detecting impact of bytecode instructions
        \vbox{
          \uncover<2>{
            \vspace{0.25cm}
            \begin{columns}[T]
              \begin{column}{0.5\textwidth}
                \includegraphics[width=\textwidth,keepaspectratio]{slides2}
              \end{column}
              \begin{column}{0.5\textwidth}
                \lstinputlisting[language=Java]{alias2.java}
              \end{column}
            \end{columns}
          }
          \begin{columns}[T]
            \begin{column}{0.5\linewidth}
              \begin{block}{Predicates}
                \lstinputlisting{alias.pred}
              \end{block}
            \end{column}
            \begin{column}{0.5\linewidth}
              \begin{block}{Statement}
                \lstinputlisting[language=Java]{alias1.java}
              \end{block}
            \end{column}
          \end{columns}
        }
    \end{itemize}
  \end{frame}

  \begin{frame}{Affected Predicates - Symbol Aliasing - Arrays}
    \begin{columns}[c]
      \begin{column}{0.3\textwidth}
        \begin{block}{Statement}
          \lstinputlisting[language=Java]{alias3.java}
        \end{block}
      \end{column}
      \begin{column}{0.7\textwidth}
        \begin{itemize}
          \item What array element is selected?
            \begin{itemize}
              \item {\sf i} is a symbolic variable
            \end{itemize}
        \end{itemize}
      \end{column}
    \end{columns}
    \begin{center}
      \includegraphics<1>{slides9}
      \includegraphics<2>{slides10}
    \end{center}
  \end{frame}
 
  \begin{frame}{Affected Predicates}
    \begin{itemize}
      \item Occurrence of an overwritten variable
      \item Transitive closure of determining predicates
    \end{itemize}
  \end{frame}

  \begin{frame}{Method Call Boundaries}

    \begin{columns}[T]
      \begin{column}{0.5\textwidth}
        \lstinputlisting[language=Java]{method1.java}
      \end{column}
      \begin{column}{0.5\textwidth}
        \lstinputlisting[language=Java]{method2.java}
      \end{column}
    \end{columns}
  \end{frame}

  \begin{frame}{Predicate Value Inference}
    \begin{itemize}
      \item Using {\bf S}atisfiability {\bf M}odulo {\bf T}heory solver (SMT)
        \begin{center}
          {\small\sf\bf SAT(\(\text{a = b} \wedge \underset{\text{Theory of arrays expressions}}{\underbrace{\text{a.x}}\text{ = 1} \wedge \underbrace{\text{b.x}}\text{ = 2}}\)) = false}
        \end{center}
      \item Distinguished predicate values:
        \begin{itemize}
          \item {\sf\bf true}
          \item {\sf\bf false}
          \item {\sf\bf unknown}
        \end{itemize}
      \item Predicates in different program locations have different values
        \begin{itemize}
          \item Determined using Weakest Preconditions
        \end{itemize}
    \end{itemize}
  \end{frame}

  \begin{frame}{Symbolic Execution}
    \begin{center}
      Suppose a predicate c = 3 \\
      \vbox to 1.5cm{
        \vfill
        \uncover<6>{
          \Large c = 3 \(\Leftrightarrow\) a + b = 3
        }
        \vfill
      }
    \end{center}
    \begin{columns}[c]
      \begin{column}{0.5\textwidth}
        \vbox{
          \small\tt
          {\color<1>{gray}   iload b } \\
          {\color<1-2>{gray} iload a } \\
          {\color<1-3>{gray} iadd    } \\
          {\color<1-4>{gray} istore c}
        }
      \end{column}
      \begin{column}{0.5\textwidth}
        \begin{center}
          \includegraphics<1,5-6>{slides5}
          \includegraphics<2>{slides6}
          \includegraphics<3>{slides7}
          \includegraphics<4>{slides8}
        \end{center}
      \end{column}
    \end{columns}
  \end{frame}


  \begin{frame}{Weakest Preconditions}
    \begin{itemize}
      \item
    \end{itemize}
  \end{frame}

  \begin{frame}{Branching - Non-determinism}
    \begin{itemize}
      \item Control-flow determined by SMT based on known truth values
        \begin{center}
          \begin{minipage}{6cm}
            \lstinputlisting[language=Java]{branching.java}
          \end{minipage}
          \includegraphics{slides4}
        \end{center}
      \item Learning branching condition predicate
        \begin{itemize}
          \item Improves precision
        \end{itemize}
    \end{itemize}
  \end{frame}

  \begin{frame}{Future - State Matching}
  \end{frame}

  \begin{frame}{Future - Predicate Learning}
  \end{frame}
\end{document}
